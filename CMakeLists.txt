cmake_minimum_required(VERSION 2.6)
project(leveldb)


################################
# Compile flags
################################
add_definitions(
  -fno-builtin-memcmp
  -std=c++11
  -DNDEBUG
  -DOS_LINUX
  -DLEVELDB_PLATFORM_POSIX
)

# Show all warnings.
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Wall")
set(CMAKE_CSS_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -Wall")


################################
# Include Paths
################################
include_directories("include")
include_directories("../leveldb")

set(SRC db/builder.cc
  db/c.cc
  db/dbformat.cc
  db/db_impl.cc
  db/db_iter.cc
  db/filename.cc
  db/log_reader.cc
  db/log_writer.cc
  db/memtable.cc
  db/repair.cc
  db/table_cache.cc
  db/version_edit.cc
  db/version_set.cc
  db/write_batch.cc
  table/block_builder.cc
  table/block.cc
  table/filter_block.cc
  table/format.cc
  table/iterator.cc
  table/merger.cc
  table/table_builder.cc
  table/table.cc
  table/two_level_iterator.cc
  util/arena.cc
  util/bloom.cc
  util/cache.cc
  util/coding.cc
  util/comparator.cc
  util/crc32c.cc
  util/env.cc
  util/env_posix.cc
  util/filter_policy.cc
  util/hash.cc
  util/histogram.cc
  util/logging.cc
  util/options.cc
  util/status.cc
  port/port_posix.cc
)


################################
# Static library
################################
if (NOT WIN32)
  add_library(leveldb STATIC ${SRC})
endif()

